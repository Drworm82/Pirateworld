/**
 * Helper para hacer llamadas REST a Supabase
 * Agrega autom√°ticamente headers de autenticaci√≥n
 */
export async function api(path, { method = 'GET', body } = {}) {
  const url = `${import.meta.env.VITE_SUPABASE_URL}${path}`;
  const token = localStorage.getItem('sb_access_token');
  
  const headers = {
    'apikey': import.meta.env.VITE_SUPABASE_ANON_KEY,
    'Content-Type': 'application/json',
  };
  
  if (token) {
    headers['Authorization'] = `Bearer ${token}`;
  }
  
  const options = {
    method,
    headers,
  };
  
  if (body) {
    options.body = JSON.stringify(body);
  }
  
  const res = await fetch(url, options);
  const text = await res.text();
  
  let data;
  try {
    data = text ? JSON.parse(text) : null;
  } catch {
    data = text;
  }
  
  if (!res.ok) {
    const errorMsg = data?.message || data?.msg || data?.error || data || res.statusText;
    throw new Error(errorMsg);
  }
  
  return data;
}

/**
 * Verifica si el usuario est√° autenticado
 */
export function isAuthenticated() {
  return !!localStorage.getItem('sb_access_token');
}

/**
 * Obtiene el user_id del localStorage
 */
export function getUserId() {
  return localStorage.getItem('sb_user_id');
}

/**
 * Cierra sesi√≥n limpiando el localStorage
 */
export function logout() {
  localStorage.removeItem('sb_access_token');
  localStorage.removeItem('sb_user_id');
}

/**
 * Mapea c√≥digos de error del backend a mensajes en espa√±ol
 */
export function getErrorMessage(error) {
  const errorStr = error.toString().toUpperCase();
  
  if (errorStr.includes('AD_LIMIT')) {
    return 'üè¥‚Äç‚ò†Ô∏è ¬°L√≠mite diario alcanzado! Vuelve ma√±ana, marinero.';
  }
  if (errorStr.includes('UNAUTHENTICATED')) {
    return '‚ö†Ô∏è Sesi√≥n expirada. Inicia sesi√≥n de nuevo.';
  }
  if (errorStr.includes('NOT_CAPTAIN')) {
    return 'üö´ Solo el capit√°n puede hacer esto.';
  }
  if (errorStr.includes('TAX_RANGE')) {
    return 'üìä El impuesto debe estar entre 0% y 50%.';
  }
  if (errorStr.includes('POOL_TOO_SMALL')) {
    return 'üí∞ No hay oro suficiente en el cofre del clan.';
  }
  if (errorStr.includes('PARCEL_CONTESTED')) {
    return '‚öîÔ∏è Parcela disputada (influencia demasiado alta).';
  }
  if (errorStr.includes('ALREADY_IN_CREW')) {
    return 'üè¥ Ya perteneces a un crew. Sal primero.';
  }
  if (errorStr.includes('NOT_IN_CREW')) {
    return 'üè¥ No perteneces a ning√∫n crew.';
  }
  
  return `‚ùå ${error.message || error}`;
}


export {
  api,
  setSession,
  clearSession,
  getToken,
  getUserId,
  getErrorMessage
} from '../lib/supaApi'

